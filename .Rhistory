getwd()
library(devtools)
document()
hello()
install()
library(bis620)
bis620::hello()
library(usethis)
use_roxygen_md()
ls()
library(devtools)
document()
install()
library(bis620)
hello()
bis620:::hello()
document()
library(devtools)
document()
hello()
document()
?hello
document9)
document()
document()
?hello
library(devtools)
document()
document()
?hello
library(usethis)
use_testthat()
use_test()
document()
test()
document()
hello()
hello(verbose = TRUE)
a <- hello()
a
a <- hello(verbose = TRUE)
a
a <- hello(verbose = FALSE)
a
document()
hello(verbse = TRUE)
hello(verbose = TRUE)
document()
hello(verbose = TRUE)
hello(verbose = FALSE)
a <- hello(verbose = FALSE)
document()
hello(verbose = FALSE)
hello(verbose = TRUE)
hello(verbose = FALSE)
document()
hello(verbose = FALSE)
greeting <- hello(verbose = FALSE)
greeting
library(devtools)
library(usethis)
se_github_action_check_standard()
q()
library(palmerpenguins)
data(penguins)
data(penguins)
library(palmerpenguins)
install.packages("palmerpenguins")
library(palmerpenguins)
penguins
fit
fit
fit <- lm(bill_length_mm ~ bill_depth_mm, data = penguins)
fit
cat("you are here.\n")
print(letters)
````
packageVersion("devtools")
R-CMD-check
se_github_action_check_standard()
library(covr)
library(devtools)
use_test()
#' @title Convert Fahrenheit to Celsius
#' @description This function will convert a temperature from Fahrenheit to Celsius
#' @param temp_F a temperature in Fahrenheit
#' @return temperature in Celsius
fahrenheit_to_celsius <- function(temp_F) {
temp_C <- (temp_F - 32) * 5 / 9
return(temp_C)
}
#' @title Convert Celsius to Kelvin
#' @description This function will convert a temperature from Celsius to Kelvin
#' @param temp_C a temperature in Celsius
#' @return temperature in Kelvin
celsius_to_kelvin <- function(temp_C) {
temp_K <- temp_C + 273.15
return(temp_K)
}
check()
check()
check()
